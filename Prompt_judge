{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "gpuType": "T4"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "#LLM Translation Judge for English-to-Filipino Translations via Prompt Engineering"
      ],
      "metadata": {
        "id": "VgE9QO61Imar"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Installation of Dependencies"
      ],
      "metadata": {
        "id": "P_gvfSLFIqNo"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "id": "zVldH5TPDllj"
      },
      "outputs": [],
      "source": [
        "from google.colab import ai\n",
        "import pandas as pd\n",
        "import urllib.request\n",
        "import numpy as np\n",
        "from scipy.stats import spearmanr\n",
        "import time\n",
        "import random\n",
        "import re"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Importing, Pre-processing, and Cleaning the dataset\n",
        "\n"
      ],
      "metadata": {
        "id": "Df7xA4miNGX_"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Importing the dataset\n",
        "\n",
        "The dataset was downloaded from google sheets and uploaded into a public repository in github. From there the dataset is loaded into the notebook using urllib"
      ],
      "metadata": {
        "id": "CxeIOpIECNFF"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "url = 'https://raw.githubusercontent.com/CarandangR/CSC420M-LLM-Translation-Judge-for-English-to-Filipino-Translations/main/Datasets%20-%20Training.csv'\n",
        "filename = 'training_dataset.csv'\n",
        "\n",
        "urllib.request.urlretrieve(url, filename)"
      ],
      "metadata": {
        "id": "6pxdPhDqN7P5",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c2776458-31ee-4e9a-d50a-a9ccf2d550a0"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "('training_dataset.csv', <http.client.HTTPMessage at 0x7adde15f5ed0>)"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_csv(filename)\n",
        "\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 293
        },
        "id": "RqltuPsb-gaO",
        "outputId": "f0b40dcc-f7b2-4989-a4b4-1e94e78b98ea"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                             English  \\\n",
              "0                                Ang gnda na mura pa   \n",
              "1  The Philippines is an archipelago made up of o...   \n",
              "2  Philippines is the world's second-largest arch...   \n",
              "3  Filipino and English are the two official lang...   \n",
              "4  Tagalog is the most widely spoken native langu...   \n",
              "\n",
              "                                    Filipino-Correct  \\\n",
              "0          It so beautiful and it's even affordable.   \n",
              "1  Ang Pilipinas ay isang kapulaang binubuo ng 7,...   \n",
              "2  Ang Pilipinas ang pangalawa sa pinakamalaking ...   \n",
              "3  Filipino at Ingles ang dalawang opisyal na lin...   \n",
              "4  Tagalog ang pinakamalawak at ginagamit na katu...   \n",
              "\n",
              "                                     Filipino-Flawed  \\\n",
              "0                                beautiful and cheap   \n",
              "1  Ang Pilipinas ay isang puno na binubuo ng mahi...   \n",
              "2  Ang Pilipinas ay ang pangalawang malaking isla...   \n",
              "3  Tagalog at Ingles ang dalawa opisyal lingwahe ...   \n",
              "4  Tagalog ay ang pinaka malawak sinasabi katutub...   \n",
              "\n",
              "                                             Remarks  \\\n",
              "0  flawed translation failed to express the 'na' ...   \n",
              "1                                                NaN   \n",
              "2                                                NaN   \n",
              "3                                                NaN   \n",
              "4                                                NaN   \n",
              "\n",
              "                            Contributor  \n",
              "0                       Charibeth Cheng  \n",
              "1  Geena Tibule/Charlyne Arajoy Carabeo  \n",
              "2  Geena Tibule/Charlyne Arajoy Carabeo  \n",
              "3  Geena Tibule/Charlyne Arajoy Carabeo  \n",
              "4  Geena Tibule/Charlyne Arajoy Carabeo  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c5e9289e-788c-422b-9559-cc99ea385f94\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>English</th>\n",
              "      <th>Filipino-Correct</th>\n",
              "      <th>Filipino-Flawed</th>\n",
              "      <th>Remarks</th>\n",
              "      <th>Contributor</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Ang gnda na mura pa</td>\n",
              "      <td>It so beautiful and it's even affordable.</td>\n",
              "      <td>beautiful and cheap</td>\n",
              "      <td>flawed translation failed to express the 'na' ...</td>\n",
              "      <td>Charibeth Cheng</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>The Philippines is an archipelago made up of o...</td>\n",
              "      <td>Ang Pilipinas ay isang kapulaang binubuo ng 7,...</td>\n",
              "      <td>Ang Pilipinas ay isang puno na binubuo ng mahi...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Geena Tibule/Charlyne Arajoy Carabeo</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Philippines is the world's second-largest arch...</td>\n",
              "      <td>Ang Pilipinas ang pangalawa sa pinakamalaking ...</td>\n",
              "      <td>Ang Pilipinas ay ang pangalawang malaking isla...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Geena Tibule/Charlyne Arajoy Carabeo</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Filipino and English are the two official lang...</td>\n",
              "      <td>Filipino at Ingles ang dalawang opisyal na lin...</td>\n",
              "      <td>Tagalog at Ingles ang dalawa opisyal lingwahe ...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Geena Tibule/Charlyne Arajoy Carabeo</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Tagalog is the most widely spoken native langu...</td>\n",
              "      <td>Tagalog ang pinakamalawak at ginagamit na katu...</td>\n",
              "      <td>Tagalog ay ang pinaka malawak sinasabi katutub...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Geena Tibule/Charlyne Arajoy Carabeo</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c5e9289e-788c-422b-9559-cc99ea385f94')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c5e9289e-788c-422b-9559-cc99ea385f94 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c5e9289e-788c-422b-9559-cc99ea385f94');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-68d8321d-661a-4cb0-b6f3-6f3dc1923e7b\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-68d8321d-661a-4cb0-b6f3-6f3dc1923e7b')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-68d8321d-661a-4cb0-b6f3-6f3dc1923e7b button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 564,\n  \"fields\": [\n    {\n      \"column\": \"English\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 562,\n        \"samples\": [\n          \"Stranded on the shores of a mysterious island, you must learn to survive. Use your cunning to kill or tame the primeval creatures roaming the land, and encounter other players to survive, dominate... and escape!\",\n          \"I think I saw you in my sleep\",\n          \"The client\\u2019s mood is rated as 4/10, indicating moderate distress.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Filipino-Correct\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 562,\n        \"samples\": [\n          \"Naligaw sa mga baybayin ng mysterious island, matuto kang mabuhay. Gamitin ang inyong talino para pumatay o iamo ang mga primeval creatures na gumagala sa lupa, at makisalamuha ang ibang manlalaro upang mabuhay, mangibabaw... at tumakas!\",\n          \"Sa panaginip ko, nakita yata kita\",\n          \"Sinabi ng kliyente na 4/10 ang kanyang mood, ibig sabihin ay nasa kalagitnaang lungkot.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Filipino-Flawed\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 562,\n        \"samples\": [\n          \"Nakaligaw sa mga pampang ng isang lihim na pulo, ikaw ay dapat matuto upang magpatuloy sa buhay. Gamitin ang inyong pagiging tuso upang pumatay o gawing maamo ang mga unang mga nilalang na naglalakad sa lupa, at makasalubong ang ibang mga naglalaro upang magpatuloy sa buhay, maging nangingibabaw... at makawala!\",\n          \"Sa tulog ko, nakita kita siguro\",\n          \"4/10 daw ang mood ng kliyente kaya malungkot siya.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Remarks\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 265,\n        \"samples\": [\n          \"Used the term \\u201cnasasangkot\\u201d and failed to recognize the Tagalog term of the word \\u201cobsessive.\\u201d\",\n          \"Translated a person named \\\"Summer\\\"\",\n          \"incorrect translation of cellphone.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Contributor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"Enrique Lejano / Monica Manlises\",\n          \"Darryl Ty/Rafael Yap\",\n          \"Charibeth Cheng\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Displaying the info of the dataset"
      ],
      "metadata": {
        "id": "vo6aju93CGdT"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rEBb2ufRBkro",
        "outputId": "dd2a1a7b-7bb5-4afa-ee83-c13377f5a4a8"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 564 entries, 0 to 563\n",
            "Data columns (total 5 columns):\n",
            " #   Column            Non-Null Count  Dtype \n",
            "---  ------            --------------  ----- \n",
            " 0   English           562 non-null    object\n",
            " 1   Filipino-Correct  562 non-null    object\n",
            " 2   Filipino-Flawed   562 non-null    object\n",
            " 3   Remarks           333 non-null    object\n",
            " 4   Contributor       562 non-null    object\n",
            "dtypes: object(5)\n",
            "memory usage: 22.2+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Dataset Cleaning"
      ],
      "metadata": {
        "id": "A0iOA3oMLuBN"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Dropping Rows with missing `English` or `Filipino-Correct/Filipino/Flawed` Texts"
      ],
      "metadata": {
        "id": "OH9LeDGdLw1e"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_cleaned = df.dropna(subset=['English', 'Filipino-Correct', 'Filipino-Flawed']).copy()"
      ],
      "metadata": {
        "id": "p3UctURFL9bJ"
      },
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Renaming of columns\n",
        "\n",
        "This is for the columns to be easily handled by the LLM. This is how each column was renamed:\n",
        "*   `English` was turned into `source_text`\n",
        "*   `Filipino-Correct` was turned into `reference_translation`\n",
        "*   `Filipino-Flawed` was turned into `translated_text`\n"
      ],
      "metadata": {
        "id": "3PD5ZEQDL_HL"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_cleaned.rename(columns={\n",
        "    'English': 'source_text',\n",
        "    'Filipino-Correct': 'reference_translation',\n",
        "    'Filipino-Flawed': 'translated_text',\n",
        "}, inplace=True)"
      ],
      "metadata": {
        "id": "3vXD4vN7QWix"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Checking of duplicate strings"
      ],
      "metadata": {
        "id": "iIsAy3xBQfdI"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_cleaned = df_cleaned[\n",
        "    (df_cleaned['source_text'].str.strip() != '') &\n",
        "    (df_cleaned['translated_text'].str.strip() != '')\n",
        "].drop_duplicates(subset=['source_text', 'translated_text'])"
      ],
      "metadata": {
        "id": "KZFiQRGIQiz6"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Displaying Cleaned dataset"
      ],
      "metadata": {
        "id": "1k23aBalRGUu"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_cleaned.sample(5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 293
        },
        "id": "5rhuU6KbRF1w",
        "outputId": "98777e79-2175-4709-cbfe-c84c318edc6b"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                           source_text  \\\n",
              "409  The client reports intrusive thoughts related ...   \n",
              "347  People leave strange little memories of themse...   \n",
              "475  You are Geralt of Rivia, mercenary monster sla...   \n",
              "337  Anna feels that she is confusing \"who\" and \"wh...   \n",
              "118  Wasn't it enough that you disfigured me for ni...   \n",
              "\n",
              "                                 reference_translation  \\\n",
              "409  May naiisip ang kliyente na paulit-ulit na tun...   \n",
              "347  May iniiwang kakaiba at maliliit na alaala ang...   \n",
              "475  Ikaw si Geralt ng Rivia, isang mersenaryong ta...   \n",
              "337  Pakiramdam ni Anna, nagkakamali siya sa paggam...   \n",
              "118  Hindi pa ba sapat na sinira mo ang aking itsur...   \n",
              "\n",
              "                                       translated_text  \\\n",
              "409  May trauma ang kliyente kaya lagi siyang may i...   \n",
              "347  Ang mga tao ay nag-iiwan ng kakaiba maliit na ...   \n",
              "475  Ikaw si Geralt ng Rivia, tagapatay ng halimaw....   \n",
              "337  Pakiramdam ni Anna ay nililito niya ang \"sino\"...   \n",
              "118  Hindi ba sapat na dinisfigure mo ako ng siyam ...   \n",
              "\n",
              "                                               Remarks  \\\n",
              "409                                          too vague   \n",
              "347  Missing “na” linker, word choice “memorya” is ...   \n",
              "475                Repetitive (“halimaw” twice), vague   \n",
              "337  unnecessary translation of words in quotations...   \n",
              "118                                                NaN   \n",
              "\n",
              "                              Contributor  \n",
              "409                  Darryl Ty/Rafael Yap  \n",
              "347   Lia Guillermo/Lester Anthony Sityar  \n",
              "475       Aira Garganera / Nigel Nograles  \n",
              "337      Enrique Lejano / Monica Manlises  \n",
              "118  Elijah Rosario/John Kirsten Espiritu  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-98f3b9ca-5a3f-40af-a74c-f2b051b98606\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>source_text</th>\n",
              "      <th>reference_translation</th>\n",
              "      <th>translated_text</th>\n",
              "      <th>Remarks</th>\n",
              "      <th>Contributor</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>409</th>\n",
              "      <td>The client reports intrusive thoughts related ...</td>\n",
              "      <td>May naiisip ang kliyente na paulit-ulit na tun...</td>\n",
              "      <td>May trauma ang kliyente kaya lagi siyang may i...</td>\n",
              "      <td>too vague</td>\n",
              "      <td>Darryl Ty/Rafael Yap</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>347</th>\n",
              "      <td>People leave strange little memories of themse...</td>\n",
              "      <td>May iniiwang kakaiba at maliliit na alaala ang...</td>\n",
              "      <td>Ang mga tao ay nag-iiwan ng kakaiba maliit na ...</td>\n",
              "      <td>Missing “na” linker, word choice “memorya” is ...</td>\n",
              "      <td>Lia Guillermo/Lester Anthony Sityar</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>475</th>\n",
              "      <td>You are Geralt of Rivia, mercenary monster sla...</td>\n",
              "      <td>Ikaw si Geralt ng Rivia, isang mersenaryong ta...</td>\n",
              "      <td>Ikaw si Geralt ng Rivia, tagapatay ng halimaw....</td>\n",
              "      <td>Repetitive (“halimaw” twice), vague</td>\n",
              "      <td>Aira Garganera / Nigel Nograles</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>337</th>\n",
              "      <td>Anna feels that she is confusing \"who\" and \"wh...</td>\n",
              "      <td>Pakiramdam ni Anna, nagkakamali siya sa paggam...</td>\n",
              "      <td>Pakiramdam ni Anna ay nililito niya ang \"sino\"...</td>\n",
              "      <td>unnecessary translation of words in quotations...</td>\n",
              "      <td>Enrique Lejano / Monica Manlises</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>118</th>\n",
              "      <td>Wasn't it enough that you disfigured me for ni...</td>\n",
              "      <td>Hindi pa ba sapat na sinira mo ang aking itsur...</td>\n",
              "      <td>Hindi ba sapat na dinisfigure mo ako ng siyam ...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Elijah Rosario/John Kirsten Espiritu</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-98f3b9ca-5a3f-40af-a74c-f2b051b98606')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-98f3b9ca-5a3f-40af-a74c-f2b051b98606 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-98f3b9ca-5a3f-40af-a74c-f2b051b98606');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-a81655c5-a57d-4bb7-8ff4-36865f1a79f7\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a81655c5-a57d-4bb7-8ff4-36865f1a79f7')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-a81655c5-a57d-4bb7-8ff4-36865f1a79f7 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df_cleaned\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"source_text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"People leave strange little memories of themselves behind when they die.\",\n          \"Wasn't it enough that you disfigured me for nine months, and then clawed your way out of my body?! Oh, I've done my part. I won't let you take from me anymore! I won't! I won't!\",\n          \"You are Geralt of Rivia, mercenary monster slayer. Before you stands a war-torn, monster-infested continent you can explore at will. Your current contract? Tracking down Ciri \\u201d the Child of Prophecy, a living weapon that can alter the shape of the world.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reference_translation\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"May iniiwang kakaiba at maliliit na alaala ang mga tao kapag sila'y namamatay.\",\n          \"Hindi pa ba sapat na sinira mo ang aking itsura sa loob ng siyam na buwan, at pagkatapos ay pinilit mo ang iyong paglabas mula sa katawan ko?! Ah, ayaw ko na. Hindi na ako papayag na may kunin ka pa mula sa akin! Hindi ako papayag! Hindi!\",\n          \"Ikaw si Geralt ng Rivia, isang mersenaryong tagapuksa ng halimaw. Sa harap mo ay isang lupain na winasak ng digmaan at puno ng mga nilalang, malaya mong malilibot ito. Ang misyon mo? Hanapin si Ciri, ang Batang Pinili na may kapangyarihang baguhin ang mundo.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"translated_text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Ang mga tao ay nag-iiwan ng kakaiba maliit na memorya kapag sila ay patay na.\",\n          \"Hindi ba sapat na dinisfigure mo ako ng siyam na buwan, at kinalmot palabas sa katawan ko?! Tapos na ako. Hindi kita hahayaan kumuha pa sa akin! Hindi! Hindi!\",\n          \"Ikaw si Geralt ng Rivia, tagapatay ng halimaw. Sa harap mo ay isang lugar na puno ng gulo at halimaw. Ang kontrata mo? Hanapin si Ciri\\u2014ang batang may kapangyarihan na baguhin ang mundo.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Remarks\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Missing \\u201cna\\u201d linker, word choice \\u201cmemorya\\u201d is too technical.\",\n          \"unnecessary translation of words in quotations, unnatural translationo f maximal adjective 'best'\",\n          \"too vague\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Contributor\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Lia Guillermo/Lester Anthony Sityar\",\n          \"Elijah Rosario/John Kirsten Espiritu\",\n          \"Aira Garganera / Nigel Nograles\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Declaring the Prompting template"
      ],
      "metadata": {
        "id": "XWhZmLh1CFtf"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "This template was made to take into consideration the different requirements specified in the machine project specifications. Things like Accuracy, Fluency, Coherence, Cultural Appropriateness, and Completeness are criterias that the LLM will evaluate on."
      ],
      "metadata": {
        "id": "ot3fPBMSKErD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "prompt = \"\"\"\n",
        "You are a strict translation judge evaluating an English-to-Filipino translation. Your task is to Evaluate and score the translated text.\n",
        "\n",
        "### Task Overview:\n",
        "Generate an evaluation from the english source text, the translated text, and the reference translation.\n",
        "English source text: {source_text}\n",
        "Translated text: {translated_text}\n",
        "Reference text: {reference_translation}\n",
        "Note that the reference translation is the correct translation of the source text so it will get the perfect score. Keep in mind when evaluating\n",
        "\n",
        "### Evaluation Criteria:\n",
        "Each criteria below will be either 0 or 1 point each. The perfect score of the translation is 6 points and the lowest score is 0 points.\n",
        "The criteria can only have a score of 1 if they meed the requirements of the criteria. otherwise it will always be 0.\n",
        "1. Accuracy – Deduct if any part of the meaning differs from the reference or omits details.\n",
        "2. Fluency – Deduct if grammar, style, or idiomatic expression is less natural than the reference.\n",
        "3. Coherence – Deduct if the logical flow or structure differs from the reference without valid reason.\n",
        "4. Cultural Appropriateness – Deduct if cultural tone, idioms, or respectful forms differ in a way that harms the message.\n",
        "5. Guideline Adherence – Deduct if terminology/style differs from the reference in a way that breaks domain rules.\n",
        "6. Completeness – Deduct if any information present in the reference is missing or altered.\n",
        "\n",
        "### Sample Output\n",
        "English - The actress has not given any further details about it.\n",
        "Translated - Ang aktres ay hindi nagbigay ng anumang karagdagang mga detalye tungkol dito.\n",
        "Accuracy: 1 point (The translated text accurately conveys the core meaning of the source text, which is that the actress has provided no new information.)\n",
        "Fluency: 0 point (The use of the \"Ang... ay...\" construction is grammatically correct but less natural and fluent than the reference text's \"Wala pang...\" structure, which is more common in Filipino.)\n",
        "Coherence: 0 point (The sentence structure, while logical, differs from the more integrated and seamless flow of the reference text. The reference's structure connects the ideas more smoothly.)\n",
        "Cultural Appropriateness: 1 point (The tone of the translation is neutral and fact-based, which is culturally appropriate for the context. No inappropriate language is used.)\n",
        "Guideline Adherence: 0 point (The translation deviates from the style of the reference text by using the formal \"ay\" construction and the literal \"anumang\" instead of the more idiomatic \"Wala pang...\" structure.)\n",
        "Completeness: 1 point (The translated text includes all key pieces of information from the source sentence: the actress, the action of not giving, the further details, and the subject matter.)\n",
        "Total Score: 3 points\n",
        "\"\"\""
      ],
      "metadata": {
        "id": "cSFytQhvJ_eA"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Import and setup of the Large Language Model"
      ],
      "metadata": {
        "id": "HPndXDf7K-kJ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Import of the Large Language Model through the use of the API key"
      ],
      "metadata": {
        "id": "u-nlX2YILFNJ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "ai.list_models()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lKTQlx0zmLRP",
        "outputId": "f0604d25-8974-4547-84d0-f1c1c88ead92"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['google/gemini-2.0-flash',\n",
              " 'google/gemini-2.0-flash-lite',\n",
              " 'google/gemini-2.5-flash',\n",
              " 'google/gemini-2.5-flash-lite',\n",
              " 'google/gemini-2.5-pro',\n",
              " 'google/gemma-3-12b',\n",
              " 'google/gemma-3-1b',\n",
              " 'google/gemma-3-27b',\n",
              " 'google/gemma-3-4b']"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Selecting Random Prompts to test different types of Promts"
      ],
      "metadata": {
        "id": "ZN7jKLrmEeR3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "random_idx = random.choice(df_cleaned.index)\n",
        "random_row = df_cleaned.loc[random_idx]"
      ],
      "metadata": {
        "id": "_h3ZtD9uOI1M"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "source_text = random_row['source_text']\n",
        "translated_text = random_row['translated_text']\n",
        "reference_translation = random_row.get('reference_translation')"
      ],
      "metadata": {
        "id": "p-nHe-UbOJ1C"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "formatted_prompt = prompt.format(\n",
        "    source_text=source_text,\n",
        "    translated_text=translated_text,\n",
        "    reference_translation=reference_translation\n",
        ")"
      ],
      "metadata": {
        "id": "UyCxi6l1OLKE"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "###"
      ],
      "metadata": {
        "id": "V6DjutZ_FDhM"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "response = ai.generate_text(formatted_prompt, model_name='google/gemini-2.5-pro')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 287
        },
        "id": "5PyB7evnOMII",
        "outputId": "801c845c-0abb-45b9-c18a-7170313ee742"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "error",
          "ename": "RateLimitError",
          "evalue": "Error code: 429 - {'message': 'Insufficient quota available to perform this operation. Try again later.', 'type': 'invalid_request_error'}",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mRateLimitError\u001b[0m                            Traceback (most recent call last)",
            "\u001b[0;32m/tmp/ipython-input-3175573108.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mresponse\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mai\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgenerate_text\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mformatted_prompt\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmodel_name\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'google/gemini-2.5-pro'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/google/colab/ai.py\u001b[0m in \u001b[0;36mgenerate_text\u001b[0;34m(prompt, model_name, stream)\u001b[0m\n\u001b[1;32m     83\u001b[0m   )\n\u001b[1;32m     84\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 85\u001b[0;31m   response = client.chat.completions.create(\n\u001b[0m\u001b[1;32m     86\u001b[0m       \u001b[0mmodel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmodel_name\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     87\u001b[0m       \u001b[0mmessages\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0;34m'role'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m'user'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'content'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mprompt\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/openai/_utils/_utils.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    285\u001b[0m                         \u001b[0mmsg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34mf\"Missing required argument: {quote(missing[0])}\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    286\u001b[0m                 \u001b[0;32mraise\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmsg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 287\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    288\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    289\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mwrapper\u001b[0m  \u001b[0;31m# type: ignore\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/openai/resources/chat/completions/completions.py\u001b[0m in \u001b[0;36mcreate\u001b[0;34m(self, messages, model, audio, frequency_penalty, function_call, functions, logit_bias, logprobs, max_completion_tokens, max_tokens, metadata, modalities, n, parallel_tool_calls, prediction, presence_penalty, prompt_cache_key, reasoning_effort, response_format, safety_identifier, seed, service_tier, stop, store, stream, stream_options, temperature, tool_choice, tools, top_logprobs, top_p, user, web_search_options, extra_headers, extra_query, extra_body, timeout)\u001b[0m\n\u001b[1;32m   1133\u001b[0m     ) -> ChatCompletion | Stream[ChatCompletionChunk]:\n\u001b[1;32m   1134\u001b[0m         \u001b[0mvalidate_response_format\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresponse_format\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1135\u001b[0;31m         return self._post(\n\u001b[0m\u001b[1;32m   1136\u001b[0m             \u001b[0;34m\"/chat/completions\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1137\u001b[0m             body=maybe_transform(\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/openai/_base_client.py\u001b[0m in \u001b[0;36mpost\u001b[0;34m(self, path, cast_to, body, options, files, stream, stream_cls)\u001b[0m\n\u001b[1;32m   1257\u001b[0m             \u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"post\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0murl\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mjson_data\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mbody\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfiles\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mto_httpx_files\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfiles\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0moptions\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1258\u001b[0m         )\n\u001b[0;32m-> 1259\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mcast\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mResponseT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrequest\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcast_to\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mopts\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstream\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstream\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstream_cls\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstream_cls\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1260\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1261\u001b[0m     def patch(\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/openai/_base_client.py\u001b[0m in \u001b[0;36mrequest\u001b[0;34m(self, cast_to, options, stream, stream_cls)\u001b[0m\n\u001b[1;32m   1045\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1046\u001b[0m                 \u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdebug\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Re-raising status error\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1047\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_status_error_from_response\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0merr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mresponse\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1048\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1049\u001b[0m             \u001b[0;32mbreak\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mRateLimitError\u001b[0m: Error code: 429 - {'message': 'Insufficient quota available to perform this operation. Try again later.', 'type': 'invalid_request_error'}"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "###Consistency Testing\n",
        "\n",
        "Note: Due to the limited quota we had this error appeared during testing. This is also where Consistency was tested. Where we repeated the following prompt for several times:\n",
        "\n",
        "`prompt` = \"\"\"\n",
        "You are a strict translation judge evaluating an English-to-Filipino translation. Your task is to Evaluate and score the translated text.\n",
        "\n",
        "### Task Overview:\n",
        "Generate an evaluation from the english source text, the translated text, and the reference translation.\n",
        "English source text: A race condition happens when threads access shared data unpredictably.\n",
        "Translated text: Race condition ay kapag may naunang thread.\n",
        "Reference text: Nangyayari ang race condition kapag hindi kontrolado ang pag-access ng mga thread sa iisang data.\n",
        "Note that the reference translation is the correct translation of the source text so it will get the perfect score. Keep in mind when evaluating\n",
        "\n",
        "### Evaluation Criteria:\n",
        "Each criteria below will be either 0 or 1 point each. The perfect score of the translation is 6 points and the lowest score is 0 points.\n",
        "The criteria can only have a score of 1 if they meed the requirements of the criteria. otherwise it will always be 0.\n",
        "1. Accuracy – Deduct if any part of the meaning differs from the reference or omits details.\n",
        "2. Fluency – Deduct if grammar, style, or idiomatic expression is less natural than the reference.\n",
        "3. Coherence – Deduct if the logical flow or structure differs from the reference without valid reason.\n",
        "4. Cultural Appropriateness – Deduct if cultural tone, idioms, or respectful forms differ in a way that harms the message.\n",
        "5. Guideline Adherence – Deduct if terminology/style differs from the reference in a way that breaks domain rules.\n",
        "6. Completeness – Deduct if any information present in the reference is missing or altered.\n",
        "\n",
        "### Sample Output\n",
        "English - The actress has not given any further details about it.\n",
        "Translated - Ang aktres ay hindi nagbigay ng anumang karagdagang mga detalye tungkol dito.\n",
        "Accuracy: 1 point (The translated text accurately conveys the core meaning of the source text, which is that the actress has provided no new information.)\n",
        "Fluency: 0 point (The use of the \"Ang... ay...\" construction is grammatically correct but less natural and fluent than the reference text's \"Wala pang...\" structure, which is more common in Filipino.)\n",
        "Coherence: 0 point (The sentence structure, while logical, differs from the more integrated and seamless flow of the reference text. The reference's structure connects the ideas more smoothly.)\n",
        "Cultural Appropriateness: 1 point (The tone of the translation is neutral and fact-based, which is culturally appropriate for the context. No inappropriate language is used.)\n",
        "Guideline Adherence: 0 point (The translation deviates from the style of the reference text by using the formal \"ay\" construction and the literal \"anumang\" instead of the more idiomatic \"Wala pang...\" structure.)\n",
        "Completeness: 1 point (The translated text includes all key pieces of information from the source sentence: the actress, the action of not giving, the further details, and the subject matter.)\n",
        "Total Score: 3 points\n",
        "\"\"\"\n",
        "\n",
        "These results although was not shown due to them not being saved to a variable showed a consistency of 100% for all 5 runs with all runs being given a score of 1. This being under the criteria of cultural appropriateness."
      ],
      "metadata": {
        "id": "5VIKbuEtZrbN"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Raw Response for Example 1:\")\n",
        "print(response)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mL4IUlGSOPuo",
        "outputId": "ab4f84d9-ab0e-468d-d8ab-7b29105b3dbb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Raw Response for Example 1:\n",
            "Accuracy: 1 point (The translation perfectly captures the core meaning of the source text. \"Wala nang respeto at pagmamahal\" accurately conveys \"no more respect or love,\" and \"iwan mo na\" is a precise and idiomatic translation of the command \"leave them.\")\n",
            "Fluency: 1 point (The translation is highly fluent and natural in conversational Filipino. The sentence structure \"Wala nang... yung tao para sa'yo\" is a common and smooth way to express this idea, much more so than a literal, non-inverted structure.)\n",
            "Coherence: 1 point (The logical flow of the original sentence—presenting a reason followed by a direct piece of advice—is perfectly mirrored in the translation. The two clauses are connected logically and clearly.)\n",
            "Cultural Appropriateness: 1 point (The translation's tone is direct and candid, which is culturally appropriate for giving personal advice between peers in the Philippines. \"Iwan mo na\" is the standard and culturally understood phrase for this situation.)\n",
            "Guideline Adherence: 1 point (The translation uses a style and terminology (\"yung tao,\" \"iwan mo na\") that are perfectly suited for the informal, conversational domain of the source text. It adheres to the unstated but clear guideline of sounding natural.)\n",
            "Completeness: 1 point (The translation includes all key elements from the source text: the person, the lack of respect and love, the recipient (\"for you\"), and the command to leave. No information is lost or omitted.)\n",
            "Total Score: 6 points\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Testing using Validation set"
      ],
      "metadata": {
        "id": "8k23fsdsF2uv"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Loading Validation set"
      ],
      "metadata": {
        "id": "cvaf2b4nF88f"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "valurl = 'https://raw.githubusercontent.com/CarandangR/CSC420M-LLM-Translation-Judge-for-English-to-Filipino-Translations/main/Datasets%20-%20Human-Labeled%20Validation%20Set.csv'\n",
        "\n",
        "valfilename = 'validation_dataset.csv'\n",
        "urllib.request.urlretrieve(valurl, valfilename)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lc2_ZwTnF2er",
        "outputId": "57135868-92d4-4b76-e9c2-922a62ea2a6a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "('validation_dataset.csv', <http.client.HTTPMessage at 0x7a6071fd1f90>)"
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "val_df = pd.read_csv(valfilename)\n",
        "\n",
        "val_df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 293
        },
        "id": "e4k4el2sGiqY",
        "outputId": "0a9e7652-b581-4510-957a-003a84e8443a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                               Source Text (English)  \\\n",
              "0  The children laughed and played under the afte...   \n",
              "1           She took a break to gather her thoughts.   \n",
              "2  The algorithm efficiently identifies patterns ...   \n",
              "3  Data normalization helps improve model perform...   \n",
              "4  alam mo ma'am masaya naman topics natin sa phi...   \n",
              "\n",
              "                              Target Text (Filipino)  Final_score  \\\n",
              "0  Ang mga bata ay nagtawanan at naglaro sa ilali...          4.0   \n",
              "1                Nagpahinga siya para mag-isip-isip.          4.0   \n",
              "2  Mabisang kinikilala ng algoritmo ang mga patte...          3.0   \n",
              "3  Tumutulong sa pagpabuti ng model ang normalisa...          5.0   \n",
              "4  You know, ma'am, we have a lot of fun philosop...          4.0   \n",
              "\n",
              "                                 Rater 1 Explanation  \\\n",
              "0  Accurate, fluent, and natural translation. Cap...   \n",
              "1  The translation is accurate. It was able to ca...   \n",
              "2  The translation of \"identifies\" as \"kinikilala...   \n",
              "3  The translated text is natural and captures th...   \n",
              "4  flawed translation is close, but failed to tra...   \n",
              "\n",
              "                                 Rater 2 Explanation  \\\n",
              "0  Just slight error due to the literal translati...   \n",
              "1  The translation would have been better if the ...   \n",
              "2  The translation would have been better if the ...   \n",
              "3  The translation didn't literally translated th...   \n",
              "4                                                NaN   \n",
              "\n",
              "                         Contributor  \n",
              "0  Paul Ivan Enclonar/Alonzo Rimando  \n",
              "1  Paul Ivan Enclonar/Alonzo Rimando  \n",
              "2  Paul Ivan Enclonar/Alonzo Rimando  \n",
              "3  Paul Ivan Enclonar/Alonzo Rimando  \n",
              "4                    Charibeth Cheng  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5aae2a4e-5ae6-456a-8d62-119cbb127328\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Source Text (English)</th>\n",
              "      <th>Target Text (Filipino)</th>\n",
              "      <th>Final_score</th>\n",
              "      <th>Rater 1 Explanation</th>\n",
              "      <th>Rater 2 Explanation</th>\n",
              "      <th>Contributor</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>The children laughed and played under the afte...</td>\n",
              "      <td>Ang mga bata ay nagtawanan at naglaro sa ilali...</td>\n",
              "      <td>4.0</td>\n",
              "      <td>Accurate, fluent, and natural translation. Cap...</td>\n",
              "      <td>Just slight error due to the literal translati...</td>\n",
              "      <td>Paul Ivan Enclonar/Alonzo Rimando</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>She took a break to gather her thoughts.</td>\n",
              "      <td>Nagpahinga siya para mag-isip-isip.</td>\n",
              "      <td>4.0</td>\n",
              "      <td>The translation is accurate. It was able to ca...</td>\n",
              "      <td>The translation would have been better if the ...</td>\n",
              "      <td>Paul Ivan Enclonar/Alonzo Rimando</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>The algorithm efficiently identifies patterns ...</td>\n",
              "      <td>Mabisang kinikilala ng algoritmo ang mga patte...</td>\n",
              "      <td>3.0</td>\n",
              "      <td>The translation of \"identifies\" as \"kinikilala...</td>\n",
              "      <td>The translation would have been better if the ...</td>\n",
              "      <td>Paul Ivan Enclonar/Alonzo Rimando</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Data normalization helps improve model perform...</td>\n",
              "      <td>Tumutulong sa pagpabuti ng model ang normalisa...</td>\n",
              "      <td>5.0</td>\n",
              "      <td>The translated text is natural and captures th...</td>\n",
              "      <td>The translation didn't literally translated th...</td>\n",
              "      <td>Paul Ivan Enclonar/Alonzo Rimando</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>alam mo ma'am masaya naman topics natin sa phi...</td>\n",
              "      <td>You know, ma'am, we have a lot of fun philosop...</td>\n",
              "      <td>4.0</td>\n",
              "      <td>flawed translation is close, but failed to tra...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Charibeth Cheng</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5aae2a4e-5ae6-456a-8d62-119cbb127328')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5aae2a4e-5ae6-456a-8d62-119cbb127328 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5aae2a4e-5ae6-456a-8d62-119cbb127328');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-527b1fff-9120-4bd8-9d23-5fe7f5469984\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-527b1fff-9120-4bd8-9d23-5fe7f5469984')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-527b1fff-9120-4bd8-9d23-5fe7f5469984 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "val_df",
              "summary": "{\n  \"name\": \"val_df\",\n  \"rows\": 64,\n  \"fields\": [\n    {\n      \"column\": \"Source Text (English)\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 57,\n        \"samples\": [\n          \"The children laughed and played under the afternoon sun.\",\n          \"It's raining cats and dogs.\",\n          \"The database index speeds up data retrieval by reducing the number of disk accesses.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Target Text (Filipino)\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 57,\n        \"samples\": [\n          \"Ang mga bata ay nagtawanan at naglaro sa ilalim ng hapon na araw.\",\n          \"Umuulan ng pusa at aso.\",\n          \"Pinapabilis ng database index ang pagkuha ng data sa pamamagitan ng pagbawas sa pag-access sa disk.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Final_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.2384807574064949,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3.0,\n          2.0,\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rater 1 Explanation\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 56,\n        \"samples\": [\n          \"Accurate, fluent, and natural translation. Captures the tone and meaning well.\",\n          \"Literal translation of an idiom, doesn't make sense in Filipino.\",\n          \"Better to use and phrase it as \\u201cTuwing bakasyon, binibisita ng mga Filipino ang kani-kanilang mga mahal sa buhay.\\u201d Filipino not Pilipino, and also best to use mahal sa buhay for a more deeper and authentic translation rather than using the direct translation of family (pamilya).\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rater 2 Explanation\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 52,\n        \"samples\": [\n          \"stiff or overly formal tone, \\\"binagong edisyon\\\" and \\\"kinabibilangan ng access sa digital bonus media\\\" feel too formal and literal\",\n          \"correct and natural sounding translation\",\n          \"Doesn't feel natural. Too literal.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Contributor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"Paul Ivan Enclonar/Alonzo Rimando\",\n          \"Charibeth Cheng\",\n          \"Enrique Lejano / Monica Manlises\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Validation Set Cleaning"
      ],
      "metadata": {
        "id": "LUVUSpo6HLaw"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Dropping rows with missign `Source Text (English)`, `Target Text (Filipino)`, and `Final Score (1 - lowest, 5 - highest)` columns"
      ],
      "metadata": {
        "id": "rJuz0XUtHVxD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "val_df_cleaned = val_df.dropna(subset=['Source Text (English)', 'Target Text (Filipino)', 'Final_score']).copy()"
      ],
      "metadata": {
        "id": "1JBUToIwHHmk"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Renaming of Columns\n",
        "\n",
        "This is for the columns to be easily handled by the LLM. This is how each column was renamed:\n",
        "*   `Source Text (English)` was turned into `source_text`\n",
        "*   `Target Text (Filipino)` was turned into `target_text`\n",
        "*   `Final Score (1 - lowest, 5 - highest)` was turned into `score`\n"
      ],
      "metadata": {
        "id": "_UaN7np6ISbj"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "val_df_cleaned.rename(columns={\n",
        "    'Source Text (English)': 'source_text',\n",
        "    'Target Text (Filipino)': 'target_text',\n",
        "    'Final_score': 'score',\n",
        "}, inplace=True)"
      ],
      "metadata": {
        "id": "IuVoS4tPIeMJ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Checking of duplicate strings"
      ],
      "metadata": {
        "id": "-bRbJakhJCCL"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "val_df_cleaned = val_df_cleaned[\n",
        "    (val_df_cleaned['source_text'].str.strip() != '') &\n",
        "    (val_df_cleaned['target_text'].str.strip() != '')\n",
        "].drop_duplicates(subset=['source_text', 'target_text'])"
      ],
      "metadata": {
        "id": "2TDekGS7JDMj"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Checking Cleaned dataset"
      ],
      "metadata": {
        "id": "HFO05zW8JKsH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "val_df_cleaned.sample(5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 293
        },
        "id": "GTN5e3TsJIqE",
        "outputId": "881153cc-5880-4124-ad11-38482cec9dc9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                          source_text  \\\n",
              "57  Things outside you are projections of what’s i...   \n",
              "14  This would be easier if blood came in more col...   \n",
              "19  Which of the following tools is LEAST likely t...   \n",
              "0   The children laughed and played under the afte...   \n",
              "25  The Binding of Isaac: Rebirth is a randomly ge...   \n",
              "\n",
              "                                          target_text  score  \\\n",
              "57  Ang mga bagay sa labas mo ay salamin ng nasa l...    3.0   \n",
              "14  Ito ay magiging mas madali kung ang dugo ay du...    2.0   \n",
              "19  Alin sa mga sumusunod ang PINAKABIHIRANG ginag...    5.0   \n",
              "0   Ang mga bata ay nagtawanan at naglaro sa ilali...    4.0   \n",
              "25  Ang The Binding of Isaac: Rebirth ay isang ran...    2.0   \n",
              "\n",
              "                                  Rater 1 Explanation  \\\n",
              "57  Accurate and clear, though some of the poetic ...   \n",
              "14  flawed translation takes \"came in more colors\"...   \n",
              "19  Perfect translation. Sounds natural as well fo...   \n",
              "0   Accurate, fluent, and natural translation. Cap...   \n",
              "25  The translations are too literal; some of the ...   \n",
              "\n",
              "                                  Rater 2 Explanation  \\\n",
              "57  The translation replaces a complex phrase with...   \n",
              "14                                                NaN   \n",
              "19  Accurate translation that would be used in eve...   \n",
              "0   Just slight error due to the literal translati...   \n",
              "25  semantic errors and lexical errors, phrases li...   \n",
              "\n",
              "                                          Contributor  \n",
              "57                Lia Guillermo/Lester Anthony Sityar  \n",
              "14               Elijah Rosario/John Kirsten Espiritu  \n",
              "19  Wrong verb-tense which makes the sentence soun...  \n",
              "0                   Paul Ivan Enclonar/Alonzo Rimando  \n",
              "25                Aira Jin Garganera / Nigel Nograles  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9e51c1da-79f8-4d21-b78c-8837aaf1faf4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>source_text</th>\n",
              "      <th>target_text</th>\n",
              "      <th>score</th>\n",
              "      <th>Rater 1 Explanation</th>\n",
              "      <th>Rater 2 Explanation</th>\n",
              "      <th>Contributor</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>57</th>\n",
              "      <td>Things outside you are projections of what’s i...</td>\n",
              "      <td>Ang mga bagay sa labas mo ay salamin ng nasa l...</td>\n",
              "      <td>3.0</td>\n",
              "      <td>Accurate and clear, though some of the poetic ...</td>\n",
              "      <td>The translation replaces a complex phrase with...</td>\n",
              "      <td>Lia Guillermo/Lester Anthony Sityar</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>This would be easier if blood came in more col...</td>\n",
              "      <td>Ito ay magiging mas madali kung ang dugo ay du...</td>\n",
              "      <td>2.0</td>\n",
              "      <td>flawed translation takes \"came in more colors\"...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Elijah Rosario/John Kirsten Espiritu</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Which of the following tools is LEAST likely t...</td>\n",
              "      <td>Alin sa mga sumusunod ang PINAKABIHIRANG ginag...</td>\n",
              "      <td>5.0</td>\n",
              "      <td>Perfect translation. Sounds natural as well fo...</td>\n",
              "      <td>Accurate translation that would be used in eve...</td>\n",
              "      <td>Wrong verb-tense which makes the sentence soun...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>The children laughed and played under the afte...</td>\n",
              "      <td>Ang mga bata ay nagtawanan at naglaro sa ilali...</td>\n",
              "      <td>4.0</td>\n",
              "      <td>Accurate, fluent, and natural translation. Cap...</td>\n",
              "      <td>Just slight error due to the literal translati...</td>\n",
              "      <td>Paul Ivan Enclonar/Alonzo Rimando</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>The Binding of Isaac: Rebirth is a randomly ge...</td>\n",
              "      <td>Ang The Binding of Isaac: Rebirth ay isang ran...</td>\n",
              "      <td>2.0</td>\n",
              "      <td>The translations are too literal; some of the ...</td>\n",
              "      <td>semantic errors and lexical errors, phrases li...</td>\n",
              "      <td>Aira Jin Garganera / Nigel Nograles</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9e51c1da-79f8-4d21-b78c-8837aaf1faf4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9e51c1da-79f8-4d21-b78c-8837aaf1faf4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9e51c1da-79f8-4d21-b78c-8837aaf1faf4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-b13cbbc4-349e-41e8-b293-2289e098cad5\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b13cbbc4-349e-41e8-b293-2289e098cad5')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-b13cbbc4-349e-41e8-b293-2289e098cad5 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"val_df_cleaned\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"source_text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"This would be easier if blood came in more colours.\",\n          \"The Binding of Isaac: Rebirth is a randomly generated action RPG shooter with heavy Rogue-like elements. Following Isaac on his journey players will find bizarre treasures that change Isaac's form giving him super human abilities and enabling him to fight off droves of mysterious creatures, discover secrets and fight his way to safety.\",\n          \"Which of the following tools is LEAST likely to be used in the process of creating a wood sculpture?\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"target_text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Ito ay magiging mas madali kung ang dugo ay dumating sa mas maraming kulay.\",\n          \"Ang The Binding of Isaac: Rebirth ay isang random na nabuong action RPG shooter na may mabibigat na elementong parang Rogue. Kasunod ni Isaac sa kanyang paglalakbay, ang mga manlalaro ay makakahanap ng mga kakaibang kayamanan na nagpabago sa anyo ni Isaac na nagbibigay sa kanya ng sobrang mga kakayahan ng tao at nagbibigay-daan sa kanya upang labanan ang napakaraming mga misteryosong nilalang, tumuklas ng mga lihim at labanan ang kanyang daan patungo sa kaligtasan.\",\n          \"Alin sa mga sumusunod ang PINAKABIHIRANG ginagamit sa paggawa ng eskulturang kahoy?\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3038404810405297,\n        \"min\": 2.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2.0,\n          4.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rater 1 Explanation\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"flawed translation takes \\\"came in more colors\\\" literally\",\n          \"The translations are too literal; some of the terms could be preserved such as \\\"Rogue-like\\\"; super human abilities was incorrectly translated to \\\"sobrang mga kakayahan ng tao\\\", instead of \\\"higit sa karaniwang kakayahan ng tao\\\", or just \\\"makapangyarihang kakayahan\\\"\",\n          \"Perfect translation. Sounds natural as well for a native speaker.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rater 2 Explanation\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Accurate translation that would be used in everyday conversations.\",\n          \"semantic errors and lexical errors, phrases like \\u201clabanan ang kanyang daan\\u201d and \\u201crandom na nabuong\\u201d sound unnatural or awkward.\",\n          \"The translation replaces a complex phrase with a simpler metaphor.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Contributor\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Elijah Rosario/John Kirsten Espiritu\",\n          \"Aira Jin Garganera / Nigel Nograles\",\n          \"Wrong verb-tense which makes the sentence sound like nonsense. There are several other possible ways of translating this in a Filipino sentence structure instead of forcing the original sentence structure.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Define prompt to use for validation"
      ],
      "metadata": {
        "id": "xXka1f_4NDnV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "valprompt = \"\"\"\n",
        "You are a strict translation judge evaluating an English-to-Filipino translation. Your task is to Evaluate and score the translated text.\n",
        "\n",
        "### Task Overview:\n",
        "Generate an evaluation from the english source text, the translated text, and the reference translation.\n",
        "English source text: {source_text}\n",
        "Translated text: {target_text}\n",
        "\n",
        "### Evaluation Criteria:\n",
        "Each criteria below will be either 0 or 1 point each. The perfect score of the translation is 6 points and the lowest score is 0 points.\n",
        "The criteria can only have a score of 1 if they meed the requirements of the criteria. otherwise it will always be 0.\n",
        "1. Accuracy – Deduct if any part of the meaning differs from the reference or omits details.\n",
        "2. Fluency – Deduct if grammar, style, or idiomatic expression is less natural than the reference.\n",
        "3. Coherence – Deduct if the logical flow or structure differs from the reference without valid reason.\n",
        "4. Cultural Appropriateness – Deduct if cultural tone, idioms, or respectful forms differ in a way that harms the message.\n",
        "5. Guideline Adherence – Deduct if terminology/style differs from the reference in a way that breaks domain rules.\n",
        "6. Completeness – Deduct if any information present in the reference is missing or altered.\n",
        "\n",
        "### Sample Output\n",
        "English - The actress has not given any further details about it.\n",
        "Translated - Ang aktres ay hindi nagbigay ng anumang karagdagang mga detalye tungkol dito.\n",
        "Accuracy: 1 point (The translated text accurately conveys the core meaning of the source text, which is that the actress has provided no new information.)\n",
        "Fluency: 0 point (The use of the \"Ang... ay...\" construction is grammatically correct but less natural and fluent than the reference text's \"Wala pang...\" structure, which is more common in Filipino.)\n",
        "Coherence: 0 point (The sentence structure, while logical, differs from the more integrated and seamless flow of the reference text. The reference's structure connects the ideas more smoothly.)\n",
        "Cultural Appropriateness: 1 point (The tone of the translation is neutral and fact-based, which is culturally appropriate for the context. No inappropriate language is used.)\n",
        "Guideline Adherence: 0 point (The translation deviates from the style of the reference text by using the formal \"ay\" construction and the literal \"anumang\" instead of the more idiomatic \"Wala pang...\" structure.)\n",
        "Completeness: 1 point (The translated text includes all key pieces of information from the source sentence: the actress, the action of not giving, the further details, and the subject matter.)\n",
        "Total Score: 3 points\n",
        "\"\"\""
      ],
      "metadata": {
        "id": "CRXI2MTYMuOd"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Add Columns to the dataframe for the LLM to fill in"
      ],
      "metadata": {
        "id": "yNMPEqbKWLfy"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "val_df_cleaned['llm_evaluation'] = None\n",
        "val_df_cleaned['llm_score'] = None"
      ],
      "metadata": {
        "id": "wpL5KbZSNXUG"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "vpA-DRaPWLCb"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "for idx, row in val_df_cleaned.iterrows():\n",
        "\n",
        "    formatted_prompt = valprompt.format(source_text=row['source_text'], target_text=row['target_text'])\n",
        "    response = ai.generate_text(formatted_prompt, model_name='google/gemini-2.5-pro')\n",
        "    evaluation_text = response\n",
        "    val_df_cleaned.at[idx, 'llm_evaluation'] = evaluation_text\n",
        "\n",
        "    # Extract total score using regex\n",
        "    match = re.search(r'Total Score: (\\d+) points', evaluation_text)\n",
        "    if match:\n",
        "        val_df_cleaned.at[idx, 'llm_score'] = int(match.group(1))"
      ],
      "metadata": {
        "id": "eEzab0Q0UlHo"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "val_df_cleaned.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ikrpihq9fB6h",
        "outputId": "ae89b623-60e7-4630-da62-67e97534d169"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Index: 57 entries, 0 to 63\n",
            "Data columns (total 8 columns):\n",
            " #   Column               Non-Null Count  Dtype  \n",
            "---  ------               --------------  -----  \n",
            " 0   source_text          57 non-null     object \n",
            " 1   target_text          57 non-null     object \n",
            " 2   score                57 non-null     float64\n",
            " 3   Rater 1 Explanation  57 non-null     object \n",
            " 4   Rater 2 Explanation  54 non-null     object \n",
            " 5   Contributor          57 non-null     object \n",
            " 6   llm_evaluation       57 non-null     object \n",
            " 7   llm_score            46 non-null     object \n",
            "dtypes: float64(1), object(7)\n",
            "memory usage: 6.1+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Exporting to .csv file"
      ],
      "metadata": {
        "id": "JqrlT-MyYtvy"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "val_df_cleaned.to_csv('validated_dataset.csv', index=False)"
      ],
      "metadata": {
        "id": "0DPAj15oWQ7i"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Due to the prompts not being similar accross all prompts and responses. There were some empty fields in the in the score column. To make up for that, we decided to export the .csv file to be edited by a 3rd party program and exported back for results and analysis. The scores will be from the outputs generated by the LLM. So it would match the score given by the LLM."
      ],
      "metadata": {
        "id": "RXfqmYWkNbd7"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Results and Analysis\n",
        "\n",
        "This section will analyze the results of the Prompt Engineered LLM judge to the results of human tested validation set."
      ],
      "metadata": {
        "id": "I7lz4nCt76-W"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "valurl = 'https://raw.githubusercontent.com/CarandangR/CSC420M-LLM-Translation-Judge-for-English-to-Filipino-Translations/main/prompt_validated_dataset.csv'\n",
        "\n",
        "valfilename = 'prompt_results.csv'\n",
        "urllib.request.urlretrieve(valurl, valfilename)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9VP_IQkwj7_Q",
        "outputId": "a1b12be2-bd4c-4a80-8283-bfbdbd9a0f34"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "('prompt_results.csv', <http.client.HTTPMessage at 0x7adddfa8ca50>)"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "prompt_results = pd.read_csv(valfilename)"
      ],
      "metadata": {
        "id": "Fiz2wc7a87zi"
      },
      "execution_count": 18,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "prompt_results.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ik1N9EjV9DHy",
        "outputId": "fe21ce4a-5a80-4218-be02-84a7b4febb3c"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 57 entries, 0 to 56\n",
            "Data columns (total 8 columns):\n",
            " #   Column               Non-Null Count  Dtype \n",
            "---  ------               --------------  ----- \n",
            " 0   source_text          57 non-null     object\n",
            " 1   target_text          57 non-null     object\n",
            " 2   score                57 non-null     int64 \n",
            " 3   Rater 1 Explanation  57 non-null     object\n",
            " 4   Rater 2 Explanation  54 non-null     object\n",
            " 5   Contributor          57 non-null     object\n",
            " 6   llm_evaluation       57 non-null     object\n",
            " 7   llm_score            57 non-null     int64 \n",
            "dtypes: int64(2), object(6)\n",
            "memory usage: 3.7+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Normalizing results of the LLM"
      ],
      "metadata": {
        "id": "ghUiQ8vAJPox"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def normalize_score(raw):\n",
        "    if raw >= 5:\n",
        "        return 5\n",
        "    elif 3 <= raw <= 4:\n",
        "        return 3\n",
        "    else:\n",
        "        return 1"
      ],
      "metadata": {
        "id": "dRTuDw-DJNxb"
      },
      "execution_count": 20,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "prompt_results[\"llm_score_normalized\"] = prompt_results[\"llm_score\"].apply(normalize_score)"
      ],
      "metadata": {
        "id": "woJG9gFOJVVV"
      },
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Evaluation metrics"
      ],
      "metadata": {
        "id": "W06Y-KseJUrn"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "spearman_corr, p_value = spearmanr(prompt_results[\"score\"], prompt_results[\"llm_score_normalized\"])\n",
        "\n",
        "variation = prompt_results.groupby(\"source_text\")[\"llm_score_normalized\"].std(ddof=0).fillna(0)\n",
        "inconsistent_ratio = (variation > 0.1).mean() * 100\n",
        "\n",
        "explainability_ratio = (prompt_results[\"llm_evaluation\"].str.strip() != \"\").mean() * 100\n",
        "\n",
        "coverage_metric = prompt_results[\"Contributor\"].nunique()\n",
        "\n",
        "# Display results\n",
        "print(f\"Spearman’s ρ: {spearman_corr:.3f} (p={p_value:.3g})\")\n",
        "print(f\"Explainability ratio: {explainability_ratio:.2f}%\")\n",
        "print(f\"Coverage (unique contributors): {coverage_metric}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "s28PjtyzJqA-",
        "outputId": "51eda455-ccb0-4d58-a7ec-6d489ca52c0a"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Spearman’s ρ: 0.409 (p=0.0016)\n",
            "Explainability ratio: 100.00%\n",
            "Coverage (unique contributors): 16\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Checking for Samples that has great effect in the Spearman Score"
      ],
      "metadata": {
        "id": "7sfHahdzKyUP"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "prompt_results[\"score_diff\"] = (prompt_results[\"score\"] - prompt_results[\"llm_score_normalized\"]).abs()\n",
        "\n",
        "largest_disagreements = prompt_results.sort_values(by=\"score_diff\", ascending=False)\n",
        "\n",
        "big_gaps = largest_disagreements[largest_disagreements[\"score_diff\"] >= 2]\n",
        "\n",
        "print(big_gaps[[\"source_text\", \"target_text\", \"score\", \"llm_score_normalized\", \"llm_evaluation\"]])\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wLntQFnGKxNc",
        "outputId": "c985c4b0-5eb3-412b-8d8e-b866497fb793"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                                          source_text  \\\n",
            "46  One of the purposes of life is to help others ...   \n",
            "24  Welcome to a new world! In Monster Hunter: Wor...   \n",
            "51  Some men are born mediocre, some men achieve m...   \n",
            "25  For so long, you and me been finding each othe...   \n",
            "4   alam mo ma'am masaya naman topics natin sa phi...   \n",
            "31  The kernel handles low-level operations in the...   \n",
            "3   Data normalization helps improve model perform...   \n",
            "7                  Thank you for coming to the event.   \n",
            "2   The algorithm efficiently identifies patterns ...   \n",
            "36  Adobo is one of the most popular dishes in the...   \n",
            "32  The address bus carries memory addresses to th...   \n",
            "55  I wanted to invite my youngest to go get some ...   \n",
            "42  The patient was given penicillin to prevent in...   \n",
            "54  Sick of tea?! That's like being sick of breath...   \n",
            "50  Things outside you are projections of what’s i...   \n",
            "49  Taking crazy things seriously is a serious was...   \n",
            "43  To be able to start fasting, you have to stop ...   \n",
            "11  Mark accidentally let the cat out of the bag a...   \n",
            "40  Eating rice with almost every meal is part of ...   \n",
            "48  I have a large collection of non-fiction books...   \n",
            "\n",
            "                                          target_text  score  \\\n",
            "46  Isa sa layunin ng buhay ay ang tumulong sa kap...      5   \n",
            "24  Maligayang pagdating sa isang bagong mundo! Sa...      4   \n",
            "51  May ilang lalaking ipinanganak na katamtaman, ...      4   \n",
            "25  Matagal na, matagal na tayong dalawa naghahana...      2   \n",
            "4   You know, ma'am, we have a lot of fun philosop...      4   \n",
            "31  Pinangangasiwaan ng kernel ang mga low-level n...      2   \n",
            "3   Tumutulong sa pagpabuti ng model ang normalisa...      5   \n",
            "7                   Salamat sa pagpunta sa kaganapan.      5   \n",
            "2   Mabisang kinikilala ng algoritmo ang mga patte...      3   \n",
            "36  Ang Adobo ay isa sa mga pinakasikat na ulam sa...      5   \n",
            "32  Dinadala ng address bus ang mga memory address...      3   \n",
            "55  Gusto ko imbitahin yung pinakabata kong anak p...      3   \n",
            "42  Ang pasyente ay binigyan ng penicillin upang m...      5   \n",
            "54  Ayaw mo na ng tsaa?! Parang sinabi mo na ring ...      5   \n",
            "50  Ang mga bagay sa labas mo ay salamin ng nasa l...      3   \n",
            "49  Ang pagseseryoso ng mga bagay na baliw ay isan...      5   \n",
            "43  Para makapagsimula ng fasting, tigilan ang pag...      3   \n",
            "11  Hindi sinasadyang nailabas ni Mark ang pusa mu...      3   \n",
            "40  Bahagi ng ating kultura ang pagkain ng kanin s...      3   \n",
            "48  Meron akong koleksyon ng mga non-fiction na li...      3   \n",
            "\n",
            "    llm_score_normalized                                     llm_evaluation  \n",
            "46                     1  Accuracy: 0 point (The translation is inaccura...  \n",
            "24                     1  Accuracy: 0 point (The translation contains se...  \n",
            "51                     1  English - Some men are born mediocre, some men...  \n",
            "25                     5  English - For so long, you and me been finding...  \n",
            "4                      1  English source text: alam mo ma'am masaya nama...  \n",
            "31                     5  English - The kernel handles low-level operati...  \n",
            "3                      3  English - Data normalization helps improve mod...  \n",
            "7                      3  ### Reference Translation\\nSalamat sa inyong p...  \n",
            "2                      5  English - The algorithm efficiently identifies...  \n",
            "36                     3  English - Adobo is one of the most popular dis...  \n",
            "32                     5  English - The address bus carries memory addre...  \n",
            "55                     1  Accuracy: 0 point (The translation misses key ...  \n",
            "42                     3  English - The patient was given penicillin to ...  \n",
            "54                     3  English - Sick of tea?! That's like being sick...  \n",
            "50                     5  Accuracy: 1 point (The translation correctly c...  \n",
            "49                     3  English - Taking crazy things seriously is a s...  \n",
            "43                     1  ### Reference Translation\\nPara makapagsimula ...  \n",
            "11                     1  English - Mark accidentally let the cat out of...  \n",
            "40                     5  English - Eating rice with almost every meal i...  \n",
            "48                     1  English - I have a large collection of non-fic...  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "big_gaps.to_csv('big_gaps.csv', index=False)"
      ],
      "metadata": {
        "id": "53x_5cPCOnwG"
      },
      "execution_count": 24,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Comparative metrics to comapre against Agentic System\n",
        "\n",
        "These are more metrics that are used to provide more comparison"
      ],
      "metadata": {
        "id": "hVMd7B0dMOeP"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def snap_to_coarse_label(x):\n",
        "    # nearest among 1,3,5\n",
        "    choices = np.array([1,3,5])\n",
        "    nearest = choices[np.argmin(np.abs(choices - x))]\n",
        "    label_map = {1: 'poor', 3: 'good', 5: 'excellent'}\n",
        "    return nearest, label_map[int(nearest)]"
      ],
      "metadata": {
        "id": "bvZo26mNMAGm"
      },
      "execution_count": 25,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "prompt_results['human_label'] = prompt_results['score'].apply(lambda x: snap_to_coarse_label(x)[1])\n",
        "\n",
        "# For LLM normalized_total we expect values in {1,3,5} already; map to text\n",
        "label_map = {1: 'poor', 3: 'good', 5: 'excellent'}\n",
        "prompt_results['llm_label'] = prompt_results['llm_score_normalized'].map(label_map)\n"
      ],
      "metadata": {
        "id": "ZnwvF3NhLA5B"
      },
      "execution_count": 26,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "label_agreement = (prompt_results['score'] == prompt_results['llm_score_normalized']).mean()\n",
        "print(f\"\\nLabel agreement (human vs LLM): {label_agreement*100:.1f}% ({int((label_agreement)*len(prompt_results))} / {len(prompt_results)})\")\n",
        "\n",
        "prompt_results['abs_diff'] = (prompt_results['score'] - prompt_results['llm_score_normalized']).abs()\n",
        "mean_abs_diff = prompt_results['abs_diff'].mean()\n",
        "print(f\"\\nMean absolute difference (|human - llm|): {mean_abs_diff:.3f}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "a1ZD0OAkJr48",
        "outputId": "95b3dc61-cda7-4920-a77e-47652b4bb59c"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Label agreement (human vs LLM): 31.6% (18 / 57)\n",
            "\n",
            "Mean absolute difference (|human - llm|): 1.158\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Output as JSON File"
      ],
      "metadata": {
        "id": "v-k1kClwv12-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "prompt_results.to_json(\"prompt_results.json\", orient=\"records\", force_ascii=False, indent=2)"
      ],
      "metadata": {
        "id": "XL_RVYejv1ZP"
      },
      "execution_count": 28,
      "outputs": []
    }
  ]
}
